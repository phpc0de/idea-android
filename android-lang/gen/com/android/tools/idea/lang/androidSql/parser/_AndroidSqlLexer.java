/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package com.android.tools.idea.lang.androidSql.parser;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static com.android.tools.idea.lang.androidSql.psi.AndroidSqlPsiTypes.*;
import static com.android.tools.idea.lang.androidSql.psi.LiteralTokenTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>_AndroidSqlLexer.flex</tt>
 */
public class _AndroidSqlLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [12, 6, 3]
   * Total runtime size is 17648 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>9]<<6)|((ch>>3)&0x3f)]<<3)|(ch&0x7)];
  }

  /* The ZZ_CMAP_Z table has 2176 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1"+
    "\20\5\21\1\22\1\23\1\24\1\21\14\25\1\26\50\25\1\27\2\25\1\30\1\31\1\32\1\33"+
    "\25\25\1\34\20\21\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1"+
    "\21\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\21\1\25\1\57\1\60\5\21\2\25\1\61"+
    "\7\21\1\25\1\62\20\21\1\25\1\63\1\21\1\64\13\25\1\65\1\25\1\66\22\21\1\67"+
    "\1\70\4\21\1\71\11\21\1\72\1\73\1\74\1\75\1\21\1\76\2\21\1\77\3\21\1\100\2"+
    "\21\1\101\10\21\123\25\1\102\7\25\1\103\1\104\12\25\1\105\15\25\1\106\6\21"+
    "\1\25\1\107\u0582\21\1\110\u017f\21");

  /* The ZZ_CMAP_Y table has 4672 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\0\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\10\1\11\1\14\1"+
    "\15\3\0\1\16\1\17\1\20\1\21\2\22\1\23\3\22\1\23\7\22\1\24\10\22\1\25\50\22"+
    "\1\26\1\22\1\27\1\30\1\31\1\32\2\30\16\0\1\33\1\34\1\35\1\36\2\22\1\37\11"+
    "\22\1\40\21\22\1\41\1\42\24\22\1\43\3\22\1\23\1\44\1\43\4\22\1\45\1\46\4\0"+
    "\1\47\1\50\1\30\3\22\2\51\1\30\1\52\1\53\1\0\1\54\5\22\1\55\2\0\1\56\1\57"+
    "\1\60\13\22\1\61\1\47\1\62\1\63\1\56\1\64\1\30\1\65\1\66\3\22\3\0\1\67\12"+
    "\22\1\70\1\0\1\71\1\30\1\56\1\72\3\22\1\55\1\73\1\21\2\22\1\70\1\74\1\75\1"+
    "\76\2\30\3\22\1\77\1\22\1\51\6\30\2\22\1\33\1\100\2\30\1\101\5\0\1\102\6\22"+
    "\1\103\2\0\1\104\1\22\1\105\1\56\1\43\1\22\1\106\1\107\1\110\2\22\1\111\1"+
    "\112\1\113\1\114\1\115\1\65\1\116\1\105\1\56\1\117\1\120\1\121\1\122\1\110"+
    "\2\22\1\111\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\56\1\132\1\30\1\121"+
    "\1\40\1\37\2\22\1\111\1\133\1\113\1\47\1\134\1\135\1\30\1\105\1\56\1\44\1"+
    "\136\1\121\1\107\1\110\2\22\1\111\1\133\1\113\1\114\1\126\1\137\1\116\1\105"+
    "\1\56\1\44\1\30\1\140\1\141\1\142\1\143\1\120\1\141\1\22\1\144\1\145\1\146"+
    "\1\147\1\30\1\131\1\56\1\30\1\44\1\150\1\33\1\111\2\22\1\111\1\22\1\151\1"+
    "\152\1\146\1\153\1\51\1\105\1\56\2\30\1\106\1\33\1\111\2\22\1\111\1\154\1"+
    "\113\1\152\1\146\1\153\1\35\1\105\1\56\1\155\1\30\1\150\1\33\1\111\4\22\1"+
    "\156\1\152\1\157\1\160\1\45\1\105\1\56\1\30\1\42\1\161\1\22\1\23\1\42\2\22"+
    "\1\37\1\162\1\23\1\163\1\164\1\0\1\131\1\56\1\165\1\30\1\43\5\22\1\166\1\167"+
    "\1\170\1\171\1\56\1\172\4\30\1\173\1\174\1\175\1\43\1\176\1\177\1\166\1\200"+
    "\1\201\1\52\1\56\1\202\4\30\1\135\2\30\1\203\1\56\1\172\1\204\1\205\1\22\1"+
    "\43\3\22\1\31\1\46\1\0\1\152\1\206\1\0\1\46\3\0\1\207\1\210\7\30\5\22\1\55"+
    "\1\0\1\211\1\56\1\172\1\70\1\212\1\213\1\214\1\215\1\22\1\216\1\217\1\56\1"+
    "\220\4\22\1\40\1\20\5\22\1\221\51\22\1\142\1\23\1\142\5\22\1\142\4\22\1\142"+
    "\1\23\1\142\1\22\1\23\7\22\1\142\10\22\1\222\4\30\2\22\2\30\12\22\2\100\1"+
    "\43\114\22\1\107\2\22\1\223\2\22\1\51\11\22\1\141\1\22\1\135\1\22\1\33\1\224"+
    "\1\30\2\22\1\224\1\30\2\22\1\225\1\30\1\22\1\33\1\226\1\30\6\22\1\227\3\0"+
    "\1\230\1\231\1\56\1\172\3\30\1\232\1\56\1\172\13\22\1\30\1\233\4\22\1\234"+
    "\10\22\1\100\1\30\3\22\1\23\1\0\1\2\1\0\1\2\1\131\1\56\3\22\1\100\1\31\1\30"+
    "\5\22\1\117\3\22\1\27\1\56\1\172\4\30\2\22\1\170\1\2\6\22\1\206\1\171\3\0"+
    "\1\114\1\56\1\172\1\56\1\172\1\45\1\30\1\0\1\52\10\30\1\235\5\22\1\227\1\0"+
    "\1\235\1\117\1\56\1\172\1\30\1\236\1\2\1\30\1\237\3\22\1\104\1\214\1\56\1"+
    "\72\4\22\1\70\1\0\1\2\1\30\4\22\1\227\2\0\1\30\1\56\1\240\1\56\1\72\3\22\1"+
    "\100\1\22\1\135\10\30\1\241\2\0\1\242\1\243\1\203\30\22\7\0\1\244\42\22\2"+
    "\100\4\22\2\100\1\22\1\245\3\22\1\100\6\22\1\33\1\201\1\246\1\31\1\247\1\117"+
    "\1\22\1\31\1\246\1\31\1\250\1\251\3\30\1\252\1\30\1\45\1\135\1\30\1\253\1"+
    "\254\1\152\1\0\1\44\1\45\2\30\1\22\1\31\4\22\2\30\1\0\1\207\1\255\1\0\1\256"+
    "\1\30\1\257\1\42\1\162\1\260\1\32\1\261\1\22\1\262\1\263\1\264\2\30\5\22\1"+
    "\135\116\30\5\22\1\23\5\22\1\23\20\22\1\31\1\265\1\266\1\30\4\22\1\40\1\20"+
    "\7\22\1\45\1\30\1\65\2\22\1\23\1\30\10\23\4\0\5\30\1\45\72\30\1\267\3\30\1"+
    "\43\1\216\1\260\1\31\1\43\11\22\1\23\1\270\1\43\12\22\1\221\1\263\4\22\1\23"+
    "\1\43\12\22\1\23\2\30\3\22\1\51\6\30\170\22\1\100\11\30\75\22\1\51\2\30\21"+
    "\22\1\31\10\30\5\22\1\100\41\22\1\31\2\22\1\56\1\271\2\30\5\22\1\170\1\101"+
    "\1\272\3\22\1\70\12\22\1\203\3\30\1\45\1\22\1\42\14\22\1\110\3\22\1\23\1\22"+
    "\7\30\1\45\1\22\1\273\1\274\2\22\1\55\2\30\1\135\6\22\1\117\1\30\1\275\5\22"+
    "\1\227\1\0\1\52\1\30\1\56\1\172\2\0\1\275\1\276\1\56\1\72\2\22\1\70\1\52\2"+
    "\22\1\170\1\0\1\2\1\30\3\22\1\31\1\102\5\22\1\55\1\0\1\256\1\45\1\56\1\172"+
    "\1\277\1\22\1\56\1\300\5\22\1\104\1\171\1\30\1\274\1\301\1\56\1\172\2\22\1"+
    "\23\1\302\6\22\1\213\1\303\1\234\2\30\1\304\1\22\1\55\1\305\1\30\3\306\1\30"+
    "\2\23\5\22\1\221\1\100\1\30\16\22\1\55\1\307\1\56\1\172\64\22\1\117\1\30\2"+
    "\22\1\23\1\310\5\22\1\117\40\30\55\22\1\100\15\22\1\27\4\30\1\23\1\30\1\310"+
    "\1\311\1\22\1\111\1\23\1\201\1\312\15\22\1\27\3\30\1\310\54\22\1\100\2\30"+
    "\10\22\1\42\6\22\5\30\1\22\1\31\2\0\2\30\2\0\1\120\2\30\1\263\3\30\1\44\1"+
    "\33\20\22\1\313\1\253\1\30\1\56\1\172\1\43\2\22\1\122\1\43\2\22\1\51\1\314"+
    "\12\22\1\23\3\42\1\315\1\316\2\30\1\317\1\22\1\154\2\22\1\23\2\22\1\320\1"+
    "\22\1\100\1\22\1\100\4\30\17\22\1\51\10\30\6\22\1\31\20\30\1\321\20\30\3\22"+
    "\1\31\6\22\1\135\1\30\1\256\3\30\4\22\1\30\1\263\3\22\1\51\4\22\1\70\1\322"+
    "\3\22\1\100\4\22\1\117\1\22\1\260\5\30\23\22\1\100\1\56\1\172\4\22\1\117\4"+
    "\22\1\117\5\22\1\30\6\22\1\117\23\30\46\22\1\23\1\30\2\22\1\100\1\30\1\22"+
    "\23\30\1\100\1\111\4\22\1\40\1\323\2\22\1\100\1\30\2\22\1\23\1\30\3\22\1\23"+
    "\10\30\2\22\1\324\1\30\2\22\1\100\1\30\3\22\1\27\10\30\7\22\1\314\10\30\1"+
    "\325\1\101\1\154\1\43\2\22\1\117\1\125\4\30\3\22\1\31\3\22\1\31\4\30\1\22"+
    "\1\43\2\22\1\326\3\30\6\22\1\100\1\30\2\22\1\100\1\30\2\22\1\51\1\30\2\22"+
    "\1\27\15\30\11\22\1\135\6\30\6\22\1\51\1\30\6\22\1\51\41\30\1\237\6\22\1\0"+
    "\1\171\3\30\1\131\1\56\1\30\1\65\1\237\5\22\1\0\1\327\2\30\3\22\1\135\1\56"+
    "\1\172\1\237\3\22\1\170\1\0\1\330\1\56\2\30\4\22\1\331\1\30\1\237\5\22\1\55"+
    "\1\0\1\332\1\333\1\56\1\334\4\30\2\22\1\37\2\22\1\227\1\0\1\210\10\30\1\23"+
    "\1\335\1\22\1\40\1\22\1\135\5\22\1\170\1\0\1\322\1\56\1\172\1\150\1\107\1"+
    "\110\2\22\1\111\1\133\1\113\1\114\1\126\1\147\1\263\1\336\2\207\21\30\6\22"+
    "\1\206\1\0\1\211\1\51\1\56\1\172\4\30\6\22\2\0\1\337\1\30\1\56\1\172\24\30"+
    "\5\22\1\170\1\52\1\0\1\256\2\30\1\301\4\30\6\22\2\0\1\340\1\30\1\56\1\172"+
    "\4\30\5\22\1\55\1\0\1\30\1\56\1\172\6\30\3\22\1\341\1\0\1\2\1\56\1\172\54"+
    "\30\10\22\1\56\1\172\1\30\1\45\40\30\1\104\1\237\4\22\1\55\1\342\1\65\1\30"+
    "\1\104\1\102\4\22\1\247\1\216\1\0\1\203\4\30\7\22\1\135\40\30\1\22\1\111\3"+
    "\22\1\170\1\171\1\0\1\135\1\30\1\56\1\172\2\30\1\42\3\22\1\343\2\0\1\46\1"+
    "\171\11\30\1\23\1\37\4\22\1\344\1\345\1\217\1\30\1\0\1\203\24\30\63\22\1\27"+
    "\14\30\15\22\1\23\2\30\30\22\1\117\27\30\5\22\1\23\72\30\10\22\1\23\67\30"+
    "\7\22\1\135\3\22\1\23\1\56\1\172\14\30\3\22\1\100\1\207\1\30\6\22\1\171\1"+
    "\30\1\117\1\30\1\56\1\172\1\310\2\22\1\263\2\22\56\30\10\22\1\31\1\30\1\104"+
    "\4\0\1\171\1\30\1\65\1\237\1\22\10\30\1\27\3\30\75\22\1\31\2\30\36\22\1\51"+
    "\41\30\43\22\1\23\12\30\61\22\1\117\40\30\15\22\1\51\1\22\1\31\1\22\1\135"+
    "\1\22\1\346\1\2\127\30\1\347\1\350\2\0\1\351\1\2\3\30\1\352\22\30\1\333\67"+
    "\30\12\22\1\33\10\22\1\33\1\353\1\354\1\22\1\355\1\154\7\22\1\40\1\356\2\33"+
    "\3\22\1\357\1\201\1\42\1\111\51\22\1\100\3\22\1\111\2\22\1\221\3\22\1\221"+
    "\2\22\1\33\3\22\1\33\2\22\1\23\3\22\1\23\3\22\1\111\3\22\1\111\2\22\1\221"+
    "\1\360\6\56\6\0\1\171\1\236\5\0\1\207\1\321\1\30\1\361\2\30\1\236\1\46\1\0"+
    "\52\30\1\171\2\0\1\362\1\363\1\322\72\30\30\22\1\31\1\30\1\171\5\30\10\22"+
    "\1\227\1\322\1\56\1\172\24\30\1\154\3\22\1\173\1\43\1\221\1\364\1\257\1\365"+
    "\1\173\1\245\1\173\2\221\1\130\1\22\1\37\1\22\1\117\1\366\1\37\1\22\1\117"+
    "\50\30\32\22\1\23\5\30\106\22\1\31\1\30\33\22\1\100\120\22\1\27\1\30\146\22"+
    "\1\135\3\30\3\22\1\100\74\30\1\127\3\30\14\0\20\30\36\0\2\30");

  /* The ZZ_CMAP_A table has 1976 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\6\1\1\1\4\2\1\1\4\6\6\4\0\1\1\1\32\1\26\1\0\1\22\1\34\1\35\1\25\1\36\1"+
    "\37\1\3\1\14\1\40\1\10\1\12\1\2\1\15\11\11\1\21\1\41\1\42\1\33\1\43\1\23\1"+
    "\21\1\44\1\46\1\53\1\57\1\13\1\61\1\71\1\66\1\55\1\77\1\73\1\62\1\70\1\56"+
    "\1\50\1\75\1\100\1\51\1\65\1\52\1\67\1\76\1\72\1\16\1\63\1\64\1\30\1\0\1\31"+
    "\1\0\1\74\1\27\1\45\1\47\1\54\1\60\1\20\1\17\1\71\1\16\1\63\1\64\1\0\1\101"+
    "\1\0\1\102\6\6\1\7\2\6\1\1\1\0\4\5\4\0\1\5\2\0\1\6\7\0\1\5\4\0\1\5\5\0\17"+
    "\5\1\0\2\55\15\5\1\65\2\5\4\0\4\5\16\0\5\5\7\0\1\5\1\0\1\5\1\0\5\5\1\0\2\5"+
    "\2\0\4\5\1\0\1\5\6\0\1\5\1\0\3\5\1\0\1\5\1\0\4\5\1\0\13\5\1\0\3\5\1\0\5\6"+
    "\2\0\6\5\1\0\7\5\1\0\1\5\15\0\1\5\1\0\15\6\1\0\1\6\1\0\2\6\1\0\2\6\1\0\1\6"+
    "\3\5\5\0\6\6\5\0\1\5\4\0\3\6\1\0\1\6\3\0\3\5\5\6\12\24\4\0\2\5\1\6\13\5\1"+
    "\0\1\5\7\6\2\5\2\6\1\0\4\6\2\5\2\24\3\5\2\0\1\5\7\0\1\6\1\5\1\6\6\5\3\6\2"+
    "\0\11\5\3\6\1\5\6\0\2\24\6\5\4\6\2\5\2\0\2\6\1\5\11\6\1\5\3\6\1\5\5\6\2\0"+
    "\1\5\3\6\4\0\6\5\6\0\10\6\6\5\3\6\1\5\2\6\1\5\7\6\2\5\2\6\2\0\2\24\1\5\3\6"+
    "\1\0\10\5\2\0\2\5\2\0\6\5\1\0\7\5\1\0\1\5\3\0\4\5\2\0\1\6\1\5\7\6\2\0\2\6"+
    "\2\0\3\6\1\5\5\0\2\5\1\0\5\5\7\0\2\5\4\0\3\6\1\0\6\5\4\0\2\5\1\0\2\5\1\0\2"+
    "\5\1\0\2\5\2\0\1\6\1\0\5\6\4\0\2\6\2\0\3\6\3\0\1\6\7\0\4\5\1\0\1\5\7\0\2\24"+
    "\2\6\3\5\1\6\2\0\1\5\1\0\2\5\1\0\3\5\2\6\1\0\3\6\2\0\1\5\10\0\1\5\6\6\6\0"+
    "\2\6\2\0\1\6\1\5\1\0\6\5\3\0\3\5\1\0\4\5\3\0\2\5\1\0\1\5\1\0\4\5\4\0\5\6\3"+
    "\0\3\6\1\0\4\6\2\0\1\5\6\0\5\6\1\0\5\5\3\0\1\5\7\6\1\0\2\6\5\0\2\6\1\0\4\5"+
    "\1\0\3\5\1\0\2\5\5\0\3\5\2\6\1\5\3\6\1\0\4\6\1\5\5\0\3\5\1\6\2\0\2\6\1\0\7"+
    "\5\1\0\1\5\4\0\1\6\4\0\6\6\1\0\1\6\3\0\2\6\4\0\1\5\1\6\2\5\7\6\4\0\10\5\10"+
    "\6\1\0\2\24\7\0\2\5\1\0\1\5\2\0\2\5\1\0\1\5\2\0\1\5\6\0\4\5\1\0\3\5\1\0\1"+
    "\5\1\0\1\5\2\0\2\5\1\0\3\5\2\6\1\0\2\6\1\5\2\0\5\5\1\0\1\5\1\0\2\24\2\0\4"+
    "\5\2\6\13\0\1\6\1\0\1\6\1\0\1\6\4\0\2\6\5\5\10\6\11\0\1\6\1\0\7\6\1\5\2\6"+
    "\4\5\3\6\1\5\3\6\2\5\7\6\3\5\4\6\5\5\14\6\1\5\1\6\2\24\4\6\2\0\3\5\1\0\7\5"+
    "\2\0\3\6\1\1\11\5\3\6\3\0\2\5\2\6\4\0\1\5\1\0\2\6\4\0\4\5\10\6\3\0\1\5\3\0"+
    "\2\5\1\6\5\0\4\6\1\0\5\5\2\6\2\5\1\6\1\5\5\0\5\6\3\5\3\0\10\6\5\5\2\24\3\0"+
    "\3\5\3\6\1\0\5\6\4\5\1\6\4\5\3\6\2\5\3\6\1\0\5\6\1\0\1\5\1\0\1\5\1\0\1\5\1"+
    "\0\1\5\2\0\3\5\1\0\6\5\2\0\2\5\13\1\5\6\2\1\5\6\1\1\4\0\1\5\12\0\1\1\1\0\1"+
    "\6\3\0\4\6\11\0\1\5\4\0\1\5\1\0\5\5\2\0\1\5\1\0\1\73\3\5\1\0\3\5\2\0\4\5\5"+
    "\0\5\5\4\0\1\5\4\0\4\5\3\6\2\5\4\0\1\1\4\0\3\5\1\0\2\6\2\0\3\5\2\24\2\5\4"+
    "\0\6\6\1\0\3\5\1\6\3\5\1\6\4\5\1\6\4\5\2\6\6\5\3\0\1\5\1\0\1\5\2\0\5\5\1\6"+
    "\2\5\2\24\5\5\1\0\4\5\2\6\4\0\1\5\3\6\2\5\1\6\5\5\2\6\3\0\3\5\4\0\3\5\2\6"+
    "\2\0\6\5\1\0\3\6\1\0\2\6\5\0\5\5\5\0\1\5\1\6\3\5\1\0\2\5\1\0\7\5\2\0\1\6\6"+
    "\0\2\5\2\0\3\5\3\0\2\5\3\0\2\5\2\0\3\6\4\0\3\5\1\0\2\5\1\0\1\5\5\0\1\6\2\0"+
    "\3\6\5\0\1\5\3\0\1\5\2\0\4\5\1\0\2\5\2\0\1\5\3\6\1\0\2\6\1\0\5\5\2\6\1\0\3"+
    "\6\2\0\1\6\2\0\5\6\1\0\2\24\3\5\1\6\2\0\1\5\1\0\1\6\4\5\5\0\3\6\3\0\2\24\1"+
    "\5\1\0\1\5\3\0\1\5\1\0\4\5\1\0\3\5\2\6\2\0\6\6\2\5\1\0\1\5\1\6\3\0\1\5\3\0"+
    "\2\5\3\0\5\6\1\5\4\6\3\0\6\6\1\5\6\6\3\0\1\6\1\0\2\6\1\0\1\6\2\5\3\0\2\6\6"+
    "\0\5\6\3\0\6\6\2\0\3\6\2\0\4\6\4\0\1\5\2\0\2\5\2\0\4\5\1\0\4\5\1\0\1\5\1\0"+
    "\6\5\2\0\5\5\1\0\4\5\1\0\4\5\2\0\2\24\4\0\1\6\3\0\1\6\2\0\7\6\1\0\2\6\1\0"+
    "\2\6\1\0\1\5\1\0\1\5\5\0\1\5\1\0\1\5\1\0\3\5\1\0\3\5\1\0\3\5");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\5\1\11\1\7\2\5\1\1\1\12\1\13"+
    "\1\14\1\15\1\16\1\1\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\25\5\1\30\1\31"+
    "\1\32\1\33\1\7\1\0\5\5\1\0\4\5\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\7\5\1\50\2\5\1\51\1\52"+
    "\1\53\1\54\7\5\1\55\7\5\1\56\1\57\1\60"+
    "\3\5\1\61\31\5\1\62\1\32\1\0\1\7\4\5"+
    "\1\63\2\5\1\7\1\5\1\64\7\5\1\65\1\66"+
    "\1\5\1\67\1\70\21\5\1\71\27\5\1\72\13\5"+
    "\1\73\13\5\1\74\11\5\1\32\1\0\4\5\1\75"+
    "\1\76\1\5\1\77\1\5\1\100\1\101\30\5\1\102"+
    "\3\5\1\103\1\104\1\105\13\5\1\106\12\5\1\107"+
    "\4\5\1\110\1\5\1\111\1\5\1\112\1\5\1\113"+
    "\11\5\1\114\1\115\1\5\1\116\2\5\1\117\2\5"+
    "\1\120\1\5\1\121\7\5\1\122\1\123\3\5\1\124"+
    "\3\5\1\125\1\5\1\126\1\127\10\5\1\130\1\5"+
    "\1\131\1\5\1\132\11\5\1\133\1\134\3\5\1\135"+
    "\1\136\15\5\1\137\3\5\1\140\1\5\1\141\1\5"+
    "\1\142\1\143\1\5\1\144\5\5\1\145\1\146\1\5"+
    "\1\147\1\5\1\150\1\5\1\151\1\152\2\5\1\153"+
    "\1\5\1\154\3\5\1\155\2\5\1\156\11\5\1\157"+
    "\1\160\1\161\4\5\1\162\1\5\1\163\1\5\1\164"+
    "\4\5\1\165\1\166\2\5\1\167\1\5\1\170\1\171"+
    "\1\172\1\5\1\173\1\5\1\174\1\175\2\5\1\176"+
    "\1\177\1\200\1\5\1\201\2\5\1\202\1\203\1\5"+
    "\1\204\3\5\1\205\1\206\2\5\1\207\3\5\1\210"+
    "\1\211\1\5\1\212\1\213\2\5\1\214\3\5\1\215"+
    "\1\216\1\217\4\5\1\220\1\221\2\5\1\222\5\5"+
    "\1\223\1\5\1\224\1\225\1\5\1\226\2\5\1\227"+
    "\1\230\4\5\1\231\1\232\1\233\1\5\1\234\1\5"+
    "\1\235\1\5\1\236\2\5\1\237\1\5\1\240\3\5"+
    "\1\241\1\242\1\243\4\5\1\244";

  private static int [] zzUnpackAction() {
    int [] result = new int[570];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\103\0\206\0\311\0\103\0\u010c\0\u014f\0\u0192"+
    "\0\u01d5\0\u0218\0\103\0\u025b\0\u029e\0\u02e1\0\u0324\0\u0367"+
    "\0\u03aa\0\u03ed\0\u0430\0\u0473\0\u04b6\0\u04f9\0\103\0\103"+
    "\0\103\0\103\0\103\0\103\0\u053c\0\u057f\0\u05c2\0\u0605"+
    "\0\u0648\0\u068b\0\u06ce\0\u0711\0\u0754\0\u0797\0\u07da\0\u081d"+
    "\0\u0860\0\u08a3\0\u08e6\0\u0929\0\u096c\0\u09af\0\u09f2\0\u0a35"+
    "\0\u0a78\0\u0abb\0\u0afe\0\u0b41\0\103\0\u0b84\0\u0bc7\0\u0c0a"+
    "\0\u0c4d\0\u0c90\0\u0cd3\0\u0d16\0\u0d59\0\u0d9c\0\u0ddf\0\u0e22"+
    "\0\u0e65\0\u0ea8\0\u0eeb\0\u0324\0\u0f2e\0\u0f71\0\u0fb4\0\103"+
    "\0\103\0\103\0\103\0\103\0\103\0\103\0\103\0\u0ff7"+
    "\0\u103a\0\u107d\0\u10c0\0\u1103\0\u1146\0\u1189\0\u11cc\0\u120f"+
    "\0\u1252\0\u010c\0\u1295\0\u12d8\0\u010c\0\u131b\0\u135e\0\u13a1"+
    "\0\u13e4\0\u1427\0\u146a\0\u14ad\0\u010c\0\u14f0\0\u1533\0\u1576"+
    "\0\u15b9\0\u15fc\0\u163f\0\u1682\0\u010c\0\u16c5\0\u1708\0\u174b"+
    "\0\u178e\0\u17d1\0\u1814\0\u1857\0\u189a\0\u18dd\0\u1920\0\u1963"+
    "\0\u19a6\0\u19e9\0\u1a2c\0\u1a6f\0\u1ab2\0\u1af5\0\u1b38\0\u1b7b"+
    "\0\u1bbe\0\u1c01\0\u1c44\0\u1c87\0\u1cca\0\u1d0d\0\u1d50\0\u1d93"+
    "\0\u1dd6\0\u1e19\0\u1e5c\0\u1e9f\0\103\0\u1ee2\0\u1f25\0\u1f25"+
    "\0\u1f68\0\u1fab\0\u1fee\0\u2031\0\u010c\0\u2074\0\u20b7\0\u0ddf"+
    "\0\u20fa\0\u213d\0\u2180\0\u21c3\0\u2206\0\u2249\0\u228c\0\u22cf"+
    "\0\u2312\0\u010c\0\u010c\0\u2355\0\u010c\0\u010c\0\u2398\0\u23db"+
    "\0\u241e\0\u2461\0\u24a4\0\u24e7\0\u252a\0\u256d\0\u25b0\0\u25f3"+
    "\0\u2636\0\u2679\0\u26bc\0\u26ff\0\u2742\0\u2785\0\u27c8\0\u010c"+
    "\0\u280b\0\u284e\0\u2891\0\u28d4\0\u2917\0\u295a\0\u299d\0\u29e0"+
    "\0\u2a23\0\u2a66\0\u2aa9\0\u2aec\0\u2b2f\0\u2b72\0\u2bb5\0\u2bf8"+
    "\0\u2c3b\0\u2c7e\0\u2cc1\0\u2d04\0\u2d47\0\u2d8a\0\u2dcd\0\u2e10"+
    "\0\u2e53\0\u2e96\0\u2ed9\0\u2f1c\0\u2f5f\0\u2fa2\0\u2fe5\0\u3028"+
    "\0\u306b\0\u30ae\0\u30f1\0\u010c\0\u3134\0\u3177\0\u31ba\0\u31fd"+
    "\0\u3240\0\u3283\0\u32c6\0\u3309\0\u334c\0\u338f\0\u33d2\0\u010c"+
    "\0\u3415\0\u3458\0\u349b\0\u34de\0\u3521\0\u3564\0\u35a7\0\u35ea"+
    "\0\u362d\0\103\0\u1ee2\0\u3670\0\u36b3\0\u36f6\0\u3739\0\u010c"+
    "\0\u010c\0\u377c\0\u010c\0\u37bf\0\u010c\0\u010c\0\u3802\0\u3845"+
    "\0\u3888\0\u38cb\0\u390e\0\u3951\0\u3994\0\u39d7\0\u3a1a\0\u3a5d"+
    "\0\u3aa0\0\u3ae3\0\u3b26\0\u3b69\0\u3bac\0\u3bef\0\u3c32\0\u3c75"+
    "\0\u3cb8\0\u3cfb\0\u3d3e\0\u3d81\0\u3dc4\0\u3e07\0\u3e4a\0\u3e8d"+
    "\0\u3ed0\0\u3f13\0\u010c\0\u010c\0\u010c\0\u3f56\0\u3f99\0\u3fdc"+
    "\0\u401f\0\u4062\0\u40a5\0\u40e8\0\u412b\0\u416e\0\u41b1\0\u41f4"+
    "\0\u010c\0\u4237\0\u427a\0\u42bd\0\u4300\0\u4343\0\u4386\0\u43c9"+
    "\0\u440c\0\u444f\0\u4492\0\u010c\0\u44d5\0\u4518\0\u455b\0\u459e"+
    "\0\u010c\0\u45e1\0\u010c\0\u4624\0\u010c\0\u4667\0\u010c\0\u46aa"+
    "\0\u46ed\0\u4730\0\u4773\0\u47b6\0\u47f9\0\u483c\0\u487f\0\u48c2"+
    "\0\u010c\0\u4905\0\u4948\0\u010c\0\u498b\0\u49ce\0\u010c\0\u4a11"+
    "\0\u4a54\0\u010c\0\u4a97\0\u010c\0\u4ada\0\u4b1d\0\u4b60\0\u4ba3"+
    "\0\u4be6\0\u4c29\0\u4c6c\0\u010c\0\u010c\0\u4caf\0\u4cf2\0\u4d35"+
    "\0\u010c\0\u4d78\0\u4dbb\0\u4dfe\0\u010c\0\u4e41\0\u010c\0\u010c"+
    "\0\u4e84\0\u4ec7\0\u4f0a\0\u4f4d\0\u4f90\0\u4fd3\0\u5016\0\u5059"+
    "\0\u010c\0\u509c\0\u010c\0\u50df\0\u010c\0\u5122\0\u5165\0\u51a8"+
    "\0\u51eb\0\u522e\0\u5271\0\u52b4\0\u52f7\0\u533a\0\u010c\0\u010c"+
    "\0\u537d\0\u53c0\0\u5403\0\u010c\0\u5446\0\u5489\0\u54cc\0\u550f"+
    "\0\u5552\0\u5595\0\u55d8\0\u561b\0\u565e\0\u56a1\0\u56e4\0\u5727"+
    "\0\u576a\0\u57ad\0\u010c\0\u57f0\0\u5833\0\u5876\0\u010c\0\u58b9"+
    "\0\u010c\0\u58fc\0\u010c\0\u010c\0\u593f\0\u010c\0\u5982\0\u59c5"+
    "\0\u5a08\0\u5a4b\0\u5a8e\0\u010c\0\u010c\0\u5ad1\0\u010c\0\u5b14"+
    "\0\u010c\0\u5b57\0\u010c\0\u010c\0\u5b9a\0\u5bdd\0\u010c\0\u5c20"+
    "\0\u010c\0\u5c63\0\u5ca6\0\u5ce9\0\u010c\0\u5d2c\0\u5d6f\0\u010c"+
    "\0\u5db2\0\u5df5\0\u5e38\0\u5e7b\0\u5ebe\0\u5f01\0\u5f44\0\u5f87"+
    "\0\u5fca\0\u010c\0\u010c\0\u010c\0\u600d\0\u6050\0\u6093\0\u60d6"+
    "\0\u010c\0\u6119\0\u010c\0\u615c\0\u010c\0\u619f\0\u61e2\0\u6225"+
    "\0\u6268\0\u010c\0\u010c\0\u62ab\0\u62ee\0\u010c\0\u6331\0\u010c"+
    "\0\u010c\0\u010c\0\u6374\0\u010c\0\u63b7\0\u010c\0\u010c\0\u63fa"+
    "\0\u643d\0\u010c\0\u010c\0\u010c\0\u6480\0\u010c\0\u64c3\0\u6506"+
    "\0\u010c\0\u010c\0\u6549\0\u010c\0\u658c\0\u65cf\0\u6612\0\u010c"+
    "\0\u010c\0\u6655\0\u6698\0\u010c\0\u66db\0\u671e\0\u6761\0\u010c"+
    "\0\u010c\0\u67a4\0\u010c\0\u010c\0\u67e7\0\u682a\0\u010c\0\u686d"+
    "\0\u68b0\0\u68f3\0\u010c\0\u010c\0\u010c\0\u6936\0\u6979\0\u69bc"+
    "\0\u69ff\0\u010c\0\u010c\0\u6a42\0\u6a85\0\u010c\0\u6ac8\0\u6b0b"+
    "\0\u6b4e\0\u6b91\0\u6bd4\0\u010c\0\u6c17\0\u010c\0\u010c\0\u6c5a"+
    "\0\u010c\0\u6c9d\0\u6ce0\0\u010c\0\u010c\0\u6d23\0\u6d66\0\u6da9"+
    "\0\u6dec\0\u010c\0\u010c\0\u010c\0\u6e2f\0\u010c\0\u6e72\0\u010c"+
    "\0\u6eb5\0\u010c\0\u6ef8\0\u6f3b\0\u010c\0\u6f7e\0\u010c\0\u6fc1"+
    "\0\u7004\0\u7047\0\u708a\0\u010c\0\u010c\0\u70cd\0\u7110\0\u7153"+
    "\0\u7196\0\u010c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[570];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\3\1\6\1\2\1\3"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\12\2\17\1\20\1\2\1\21\1\22\1\23\1\24"+
    "\1\2\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\2\37\2\40\1\41\1\42\1\43"+
    "\2\44\1\45\1\46\2\47\1\16\1\50\2\6\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\6\1\60"+
    "\1\61\1\62\1\63\1\64\1\65\104\0\1\3\2\0"+
    "\1\3\2\0\1\3\76\0\1\66\104\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\12\0\1\67\103\0\1\10\1\70"+
    "\1\71\1\0\1\10\2\0\1\71\73\0\1\70\3\0"+
    "\1\70\72\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\1\6\1\72\2\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\73\10\6\1\74\3\6\1\75\2\6\1\76\13\6"+
    "\13\0\1\10\1\70\1\71\1\0\1\10\1\77\1\0"+
    "\1\71\67\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\1\21\1\22\15\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\100\2\6"+
    "\1\101\1\102\15\6\1\103\11\6\7\0\3\104\1\0"+
    "\1\104\1\0\1\104\1\0\4\104\1\0\1\104\1\0"+
    "\1\104\17\0\35\104\13\0\1\20\3\0\1\20\6\0"+
    "\1\20\56\0\25\21\1\105\55\21\26\22\1\106\54\22"+
    "\27\23\1\107\53\23\31\24\1\110\51\24\33\0\1\111"+
    "\102\0\1\112\102\0\1\113\6\0\1\114\1\115\72\0"+
    "\1\116\7\0\1\117\44\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\2\6\1\120\1\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\6\2\121\2\6\1\122\2\123\1\6"+
    "\1\124\2\125\1\120\1\126\2\6\1\127\1\6\1\130"+
    "\11\6\7\0\3\6\1\0\1\6\1\0\1\131\1\0"+
    "\3\6\1\131\1\0\1\6\1\0\1\6\17\0\17\6"+
    "\1\132\15\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\2\6\1\133\1\6\1\0\1\6\1\0\1\6"+
    "\17\0\5\6\1\134\4\6\1\135\2\6\1\133\5\6"+
    "\1\136\11\6\7\0\3\6\1\0\1\6\1\0\1\137"+
    "\1\0\3\6\1\137\1\0\1\6\1\0\1\6\17\0"+
    "\2\140\2\6\1\141\4\6\1\142\23\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\143\1\0\3\6\1\143\1\0"+
    "\1\6\1\0\1\6\17\0\2\144\2\6\1\145\1\146"+
    "\14\6\1\147\12\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\150\2\6\1\151\1\152\14\6\1\153\1\154\11\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\2\6"+
    "\1\155\1\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\156\2\6\1\155\3\6\1\157\2\6\1\160\1\161"+
    "\7\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\162\2\6"+
    "\1\163\16\6\1\164\11\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\165\1\0\3\6\1\165\1\0\1\6\1\0"+
    "\1\6\17\0\2\166\3\6\1\167\3\6\1\170\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\171\1\0\3\6"+
    "\1\171\1\0\1\6\1\0\1\6\17\0\11\6\1\172"+
    "\23\6\7\0\3\6\1\0\1\6\1\0\1\173\1\0"+
    "\3\6\1\173\1\0\1\6\1\0\1\6\17\0\2\174"+
    "\33\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\175\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\12\6\1\176\6\6"+
    "\1\177\7\6\1\200\3\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\2\201\33\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\5\6\1\202\10\6\1\203\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\204\10\6\1\205\12\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\206\1\0\3\6\1\206"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\207\10\6\1\210\16\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\2\211\7\6\1\212"+
    "\23\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\4\6\1\213"+
    "\30\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\23\6\1\214"+
    "\11\6\103\0\1\215\1\0\3\66\1\216\77\66\4\67"+
    "\1\0\76\67\11\0\1\70\1\0\1\71\1\0\1\70"+
    "\2\0\1\71\72\0\1\217\1\220\2\0\1\217\1\220"+
    "\72\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\7\6\2\221\1\222"+
    "\17\6\1\223\3\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\7\6\2\224\24\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\13\6\2\225\20\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\21\6\1\226\13\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\7\6\2\227\24\6\13\0\1\230\3\0\1\230\1\0"+
    "\2\230\24\0\1\230\1\0\1\230\4\0\1\230\3\0"+
    "\1\230\27\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\11\6\1\231"+
    "\23\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\5\6\1\232"+
    "\27\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\4\6\1\233"+
    "\30\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\16\6\1\234"+
    "\16\6\27\0\1\21\103\0\1\22\103\0\1\23\60\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\235\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\4\6\1\236\30\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\237\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\240\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\241\11\6\2\242\20\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\13\6\2\243\20\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\244\7\6"+
    "\1\245\16\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\7\6"+
    "\2\246\24\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\247\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\2\6\1\250\1\6\1\0\1\6\1\0\1\6"+
    "\17\0\6\6\1\251\6\6\1\250\7\6\1\252\7\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\2\6"+
    "\1\253\1\6\1\0\1\6\1\0\1\6\17\0\15\6"+
    "\1\253\17\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\13\6"+
    "\2\254\20\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\255\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\2\6\1\256\1\6\1\0\1\6\1\0\1\6"+
    "\17\0\7\6\2\257\1\260\1\261\2\6\1\256\1\262"+
    "\2\6\1\263\3\6\1\264\3\6\1\265\3\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\11\6\1\266\23\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\16\6\1\267\7\6\1\270"+
    "\6\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\25\6\1\271"+
    "\7\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\24\6\1\272"+
    "\10\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\6\2\273"+
    "\31\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\274\7\6"+
    "\1\275\23\6\7\0\3\6\1\0\1\6\1\0\1\276"+
    "\1\0\3\6\1\276\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\21\6\1\277"+
    "\13\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\12\6\1\300"+
    "\3\6\1\301\5\6\1\302\10\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\303\1\0\3\6\1\303\1\0\1\6"+
    "\1\0\1\6\17\0\4\6\1\304\30\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\305\1\0\3\6\1\305\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\5\6\1\306\27\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\307\2\6\1\310\1\311\2\312"+
    "\4\6\1\313\13\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\12\6\1\314\22\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\24\6\1\315\10\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\12\6\1\316\22\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\6\6\1\317\26\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\6\6\1\320\26\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\16\6\1\321\16\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\2\6\1\322\1\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\323\6\6\1\322\1\324\2\6"+
    "\1\325\13\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\326\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\4\6"+
    "\1\327\30\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\21\6"+
    "\1\330\13\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\2\6\1\331\1\6\1\0\1\6\1\0\1\6"+
    "\17\0\15\6\1\331\17\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\24\6\1\332\2\6\1\333\5\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\334\7\6\1\335\16\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\32\6\1\336\2\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\32\6\1\337\2\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\340\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\341\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\13\6\2\342\20\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\343\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\4\6\1\344\30\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\4\6\1\345\30\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\346\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\347\1\0\3\6"+
    "\1\347\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\17\6\1\350\15\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\351\7\6\1\352\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\2\353\33\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\7\6\2\354\5\6\1\355"+
    "\16\6\7\0\3\6\1\0\1\6\1\0\1\356\1\0"+
    "\3\6\1\356\1\0\1\6\1\0\1\6\17\0\5\6"+
    "\1\357\27\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\11\6"+
    "\1\360\23\6\7\0\3\6\1\0\1\6\1\0\1\361"+
    "\1\0\3\6\1\361\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\2\0\2\66\1\362\1\363\77\66\11\0\1\220"+
    "\3\0\1\220\72\0\3\6\1\0\1\6\1\0\1\364"+
    "\1\0\3\6\1\364\1\0\1\6\1\0\1\6\17\0"+
    "\16\6\1\365\16\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\21\6\1\366\13\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\16\6\1\367\16\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\22\6\1\370\12\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\371\1\0\3\6\1\371\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\2\372"+
    "\33\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\16\6\1\373"+
    "\16\6\7\0\3\6\1\0\1\6\1\0\1\374\1\0"+
    "\3\6\1\374\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\24\6\1\375\10\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\16\6\1\376\16\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\377\1\0\3\6"+
    "\1\377\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u0100\27\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\u0101\33\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\11\6\1\u0102\23\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\16\6\1\u0103\16\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u0104\1\0\3\6\1\u0104\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\4\6\1\u0105\30\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\4\6\1\u0106\30\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\26\6\1\u0107\6\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\u0108\23\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\21\6\1\u0109\13\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u010a\1\0\3\6\1\u010a\1\0\1\6"+
    "\1\0\1\6\17\0\35\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u010b\1\0\3\6\1\u010b\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\u010c\1\0\3\6\1\u010c\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\23\6"+
    "\1\u010d\11\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\u010e\22\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\2\u010f"+
    "\33\6\7\0\3\6\1\0\1\6\1\0\1\u0110\1\0"+
    "\3\6\1\u0110\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u0111\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u0112\1\0\3\6"+
    "\1\u0112\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\16\6\1\u0113\16\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\21\6\1\u0114\13\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\16\6\1\u0115\16\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\22\6\1\u0116\12\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\31\6\1\u0117\3\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\16\6\1\u0118\16\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\12\6\1\u0119\22\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\25\6\1\u011a\7\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\12\6\1\u011b\22\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u011c\1\0\3\6\1\u011c"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u011d\2\u011e"+
    "\24\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\2\6\1\u011f\1\6\1\0\1\6\1\0\1\6\17\0"+
    "\15\6\1\u011f\3\6\1\u0120\13\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u0121\4\6\1\u0122\11\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\24\6\1\u0123\10\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\u0124\33\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\21\6\1\u0125\13\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\7\6\2\u0126\24\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u0127\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u0128\1\0\3\6\1\u0128\1\0"+
    "\1\6\1\0\1\6\17\0\4\6\1\u0129\30\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\u012a\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u012b\1\0\3\6\1\u012b"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u012c\1\0\3\6\1\u012c\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u012d\1\0\3\6\1\u012d\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\u012e\26\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\23\6\1\u012f\11\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u0130\1\0\3\6\1\u0130\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\4\6\1\u0131\30\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\23\6\1\u0132\11\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\12\6\1\u0133\22\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u0134\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u0135\1\0\3\6\1\u0135\1\0\1\6"+
    "\1\0\1\6\17\0\2\u0136\33\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\u0137\33\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u0138\1\0\3\6\1\u0138\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\7\6\2\u0139\24\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\u013a\33\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\31\6"+
    "\1\u013b\3\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u013c\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u013d\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\11\6"+
    "\1\u013e\23\6\7\0\3\6\1\0\1\6\1\0\1\u013f"+
    "\1\0\3\6\1\u013f\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\u0140\1\0"+
    "\3\6\1\u0140\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u0141\1\0\3\6"+
    "\1\u0141\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\11\6\1\u0142\23\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\4\6\1\u0143\27\6\1\u0144"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\12\6\1\u0145\22\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\2\u0146\33\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\7\6\2\u0147\24\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\23\6\1\u0148\11\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\6\2\u0149\31\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\22\6\1\u014a\12\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u014b\4\6\1\u014c"+
    "\22\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\25\6\1\u014d"+
    "\7\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\24\6\1\u014e"+
    "\10\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\12\6\1\u014f"+
    "\22\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\23\6\1\u0150"+
    "\11\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\23\6\1\u0151"+
    "\11\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\26\6\1\u0152"+
    "\6\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\6\6\1\u0153"+
    "\26\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\12\6\1\u0154"+
    "\22\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\5\6\1\u0155"+
    "\27\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\31\6\1\u0156"+
    "\3\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\23\6\1\u0157"+
    "\11\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\6\6\1\u0158"+
    "\26\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\u0159\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\31\6\1\u015a\3\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\u015b\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\5\6\1\u015c\27\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u015d\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\7\6\2\u015e\24\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\4\6\1\u015f\30\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\17\6\1\u0160\15\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\5\6\1\u0161\27\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\u0162\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\5\6\1\u0163\27\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u0164\1\0\3\6"+
    "\1\u0164\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\12\6\1\u0165\22\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u0166\1\0\3\6\1\u0166"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u0167\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u0168\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u0169\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u016a\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\13\6\2\u016b\20\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\24\6\1\u016c\10\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\2\u016d\33\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\5\6\1\u016e\27\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\1\6\1\u016f\2\6\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\u0170\33\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u0171\1\0\3\6\1\u0171\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\6\2\u0172\31\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\6\6\1\u0173\26\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\4\6\1\u0174\30\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\u0175\1\0\3\6\1\u0175\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\21\6"+
    "\1\u0176\13\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\25\6"+
    "\1\u0177\7\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\2\u0178"+
    "\33\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\16\6\1\u0179"+
    "\16\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\6\6\1\u017a"+
    "\26\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\u017b\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\24\6\1\u017c\10\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\u017d\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u017e\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\21\6\1\u017f\13\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\27\6\1\u0180\5\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u0181\1\0\3\6"+
    "\1\u0181\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u0182\27\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\11\6\1\u0183\23\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u0184\27\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\1\6\1\u0185"+
    "\2\6\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u0186\27\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u0187\1\0\3\6\1\u0187"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\16\6\1\u0188\16\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\13\6\2\u0189\20\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u018a\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u018b\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\23\6\1\u018c\11\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\5\6\1\u018d\27\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\23\6\1\u018e\11\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\7\6\2\u018f\24\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\u0190\26\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\2\6\2\u0191\31\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\11\6\1\u0192\23\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\u0193\26\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\7\6\2\u0194\24\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\31\6\1\u0195\3\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u0196\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u0197\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\23\6\1\u0198\11\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\25\6\1\u0199\7\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\u019a\26\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\22\6\1\u019b\12\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\31\6\1\u019c\3\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\4\6\1\u019d\30\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u019e\1\0\3\6\1\u019e\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\24\6\1\u019f\10\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\u01a0\33\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\23\6\1\u01a1\11\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u01a2\1\0\3\6\1\u01a2\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\23\6\1\u01a3\11\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\17\6\1\u01a4\15\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\6\6\1\u01a5\26\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\21\6\1\u01a6\13\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\21\6\1\u01a7\13\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\11\6\1\u01a8\23\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\u01a9\1\0\3\6\1\u01a9\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\25\6"+
    "\1\u01aa\7\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\22\6"+
    "\1\u01ab\12\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\u01ac\22\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\20\6"+
    "\1\u01ad\14\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\u01ae\22\6\7\0\3\6\1\0\1\6\1\0\1\u01af"+
    "\1\0\3\6\1\u01af\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\u01b0\1\0"+
    "\3\6\1\u01b0\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u01b1\26\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u01b2\1\0\3\6"+
    "\1\u01b2\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\21\6\1\u01b3\13\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u01b4\1\0\3\6\1\u01b4"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u01b5\1\0\3\6\1\u01b5\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\21\6\1\u01b6\13\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\u01b7\23\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\31\6\1\u01b8\3\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\7\6\2\u01b9\24\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\u01ba\33\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\5\6\1\u01bb\27\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\2\u01bc\33\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\u01bd\1\0\3\6\1\u01bd\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\13\6"+
    "\2\u01be\20\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\11\6"+
    "\1\u01bf\23\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\5\6"+
    "\1\u01c0\27\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u01c1\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\u01c2\22\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u01c3\26\6\7\0\3\6\1\0\1\6\1\0\1\u01c4"+
    "\1\0\3\6\1\u01c4\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\12\6\1\u01c5"+
    "\22\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\21\6\1\u01c6"+
    "\13\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\u01c7\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u01c8\1\0\3\6"+
    "\1\u01c8\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\u01c9\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\u01ca\33\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\16\6\1\u01cb\16\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\11\6\1\u01cc\23\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u01cd\1\0\3\6\1\u01cd\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\u01ce\33\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\16\6\1\u01cf\16\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\5\6\1\u01d0\27\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\16\6\1\u01d1\16\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\22\6\1\u01d2\12\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u01d3\1\0\3\6\1\u01d3\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\u01d4\33\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\12\6"+
    "\1\u01d5\22\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u01d6\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\4\6"+
    "\1\u01d7\30\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\25\6"+
    "\1\u01d8\7\6\7\0\3\6\1\0\1\6\1\0\1\u01d9"+
    "\1\0\3\6\1\u01d9\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\u01da\1\0"+
    "\3\6\1\u01da\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\23\6\1\u01db\11\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\2\u01dc\33\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\5\6\1\u01dd\27\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\24\6\1\u01de\10\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\21\6\1\u01df\13\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\2\u01e0\33\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\11\6\1\u01e1\23\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u01e2\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u01e3\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u01e4\1\0\3\6\1\u01e4\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\7\6\2\u01e5\24\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\12\6\1\u01e6\22\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\12\6\1\u01e7\22\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\u01e8\23\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\1\6\1\u01e9\2\6\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u01ea\1\0\3\6\1\u01ea\1\0\1\6"+
    "\1\0\1\6\17\0\35\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\7\6\2\u01eb\24\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u01ec\1\0\3\6\1\u01ec\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\7\6\2\u01ed\24\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\2\u01ee\33\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\7\6"+
    "\2\u01ef\24\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\5\6"+
    "\1\u01f0\27\6\7\0\3\6\1\0\1\6\1\0\1\u01f1"+
    "\1\0\3\6\1\u01f1\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\7\6\2\u01f2"+
    "\24\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\u01f3\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u01f4\1\0\3\6"+
    "\1\u01f4\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0"+
    "\1\6\1\0\1\6\17\0\6\6\1\u01f5\26\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u01f6\1\0\3\6\1\u01f6"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\16\6\1\u01f7\16\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\13\6\2\u01f8\20\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\13\6\2\u01f9\20\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\2\u01fa\33\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u01fb\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u01fc\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u01fd\1\0\3\6\1\u01fd\1\0\1\6"+
    "\1\0\1\6\17\0\2\u01fe\33\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u01ff\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\21\6\1\u0200\13\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\7\6\2\u0201\24\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\u0202\23\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u0203\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\17\6\1\u0204\15\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u0205\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\32\6\1\u0206\2\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\5\6\1\u0207\27\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\7\6\2\u0208\24\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\32\6\1\u0209\2\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u020a\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\27\6\1\u020b\5\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\5\6\1\u020c\27\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u020d\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u020e\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\11\6\1\u020f\23\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\30\6\1\u0210\4\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\7\6\2\u0211\24\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\16\6\1\u0212\16\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\6\6\1\u0213\26\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\13\6\2\u0214\20\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\17\0\2\6\2\u0215\31\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u0216\1\0\3\6\1\u0216\1\0\1\6"+
    "\1\0\1\6\17\0\35\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\6\6\1\u0217\26\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\12\6\1\u0218\22\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\u0219\1\0\3\6\1\u0219\1\0\1\6\1\0"+
    "\1\6\17\0\35\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\u021a\1\0\3\6\1\u021a\1\0\1\6\1\0\1\6"+
    "\17\0\35\6\7\0\3\6\1\0\1\6\1\0\1\u021b"+
    "\1\0\3\6\1\u021b\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\u021c\1\0"+
    "\3\6\1\u021c\1\0\1\6\1\0\1\6\17\0\35\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\17\6\1\u021d\15\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\11\6\1\u021e\23\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\12\6\1\u021f\22\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\6\1\0\4\6"+
    "\1\0\1\6\1\0\1\6\17\0\6\6\1\u0220\4\6"+
    "\2\u0221\20\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\6\6"+
    "\1\u0222\26\6\7\0\3\6\1\0\1\6\1\0\1\6"+
    "\1\0\4\6\1\0\1\6\1\0\1\6\17\0\17\6"+
    "\1\u0223\15\6\7\0\3\6\1\0\1\6\1\0\1\u0224"+
    "\1\0\3\6\1\u0224\1\0\1\6\1\0\1\6\17\0"+
    "\35\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\16\6\1\u0225"+
    "\16\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\6\6\1\u0226"+
    "\26\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\24\6\1\u0227"+
    "\10\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\21\6\1\u0228"+
    "\13\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\4\6\1\u0229"+
    "\30\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\6\6\1\u022a"+
    "\26\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\11\6\1\u022b"+
    "\23\6\7\0\3\6\1\0\1\6\1\0\1\6\1\0"+
    "\4\6\1\0\1\6\1\0\1\6\17\0\2\u022c\33\6"+
    "\7\0\3\6\1\0\1\6\1\0\1\u022d\1\0\3\6"+
    "\1\u022d\1\0\1\6\1\0\1\6\17\0\35\6\7\0"+
    "\3\6\1\0\1\6\1\0\1\u022e\1\0\3\6\1\u022e"+
    "\1\0\1\6\1\0\1\6\17\0\35\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u022f\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\24\6\1\u0230\10\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\6\6\1\u0231\26\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\1\6"+
    "\1\0\1\6\17\0\12\6\1\u0232\22\6\7\0\3\6"+
    "\1\0\1\6\1\0\1\u0233\1\0\3\6\1\u0233\1\0"+
    "\1\6\1\0\1\6\17\0\35\6\7\0\3\6\1\0"+
    "\1\6\1\0\1\u0234\1\0\3\6\1\u0234\1\0\1\6"+
    "\1\0\1\6\17\0\35\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\6\6\1\u0235\26\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\21\6\1\u0236\13\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\6\6\1\u0237\26\6\7\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\1\6\1\0\1\6"+
    "\17\0\2\u0238\33\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\24\6\1\u0239\10\6\7\0\3\6\1\0\1\6\1\0"+
    "\1\6\1\0\4\6\1\0\1\6\1\0\1\6\17\0"+
    "\31\6\1\u023a\3\6\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[29145];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\5\1\1\11\13\1\6\11"+
    "\30\1\1\11\3\1\1\0\5\1\1\0\10\1\10\11"+
    "\75\1\1\11\1\1\1\0\142\1\1\11\1\0\u0147\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[570];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _AndroidSqlLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _AndroidSqlLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 165: break;
          case 2: 
            { return WHITE_SPACE;
            } 
            // fall through
          case 166: break;
          case 3: 
            { return DIV;
            } 
            // fall through
          case 167: break;
          case 4: 
            { return STAR;
            } 
            // fall through
          case 168: break;
          case 5: 
            { return IDENTIFIER;
            } 
            // fall through
          case 169: break;
          case 6: 
            { return MINUS;
            } 
            // fall through
          case 170: break;
          case 7: 
            { return NUMERIC_LITERAL;
            } 
            // fall through
          case 171: break;
          case 8: 
            { return DOT;
            } 
            // fall through
          case 172: break;
          case 9: 
            { return PLUS;
            } 
            // fall through
          case 173: break;
          case 10: 
            { return NUMBERED_PARAMETER;
            } 
            // fall through
          case 174: break;
          case 11: 
            { return UNTERMINATED_SINGLE_QUOTE_STRING_LITERAL;
            } 
            // fall through
          case 175: break;
          case 12: 
            { return UNTERMINATED_DOUBLE_QUOTE_STRING_LITERAL;
            } 
            // fall through
          case 176: break;
          case 13: 
            { return UNTERMINATED_BACKTICK_LITERAL;
            } 
            // fall through
          case 177: break;
          case 14: 
            { return UNTERMINATED_BRACKET_LITERAL;
            } 
            // fall through
          case 178: break;
          case 15: 
            { return EQ;
            } 
            // fall through
          case 179: break;
          case 16: 
            { return MOD;
            } 
            // fall through
          case 180: break;
          case 17: 
            { return AMP;
            } 
            // fall through
          case 181: break;
          case 18: 
            { return LPAREN;
            } 
            // fall through
          case 182: break;
          case 19: 
            { return RPAREN;
            } 
            // fall through
          case 183: break;
          case 20: 
            { return COMMA;
            } 
            // fall through
          case 184: break;
          case 21: 
            { return SEMICOLON;
            } 
            // fall through
          case 185: break;
          case 22: 
            { return LT;
            } 
            // fall through
          case 186: break;
          case 23: 
            { return GT;
            } 
            // fall through
          case 187: break;
          case 24: 
            { return BAR;
            } 
            // fall through
          case 188: break;
          case 25: 
            { return TILDE;
            } 
            // fall through
          case 189: break;
          case 26: 
            { return COMMENT;
            } 
            // fall through
          case 190: break;
          case 27: 
            { return LINE_COMMENT;
            } 
            // fall through
          case 191: break;
          case 28: 
            { return NAMED_PARAMETER;
            } 
            // fall through
          case 192: break;
          case 29: 
            { return SINGLE_QUOTE_STRING_LITERAL;
            } 
            // fall through
          case 193: break;
          case 30: 
            { return DOUBLE_QUOTE_STRING_LITERAL;
            } 
            // fall through
          case 194: break;
          case 31: 
            { return BACKTICK_LITERAL;
            } 
            // fall through
          case 195: break;
          case 32: 
            { return BRACKET_LITERAL;
            } 
            // fall through
          case 196: break;
          case 33: 
            { return NOT_EQ;
            } 
            // fall through
          case 197: break;
          case 34: 
            { return EQEQ;
            } 
            // fall through
          case 198: break;
          case 35: 
            { return LTE;
            } 
            // fall through
          case 199: break;
          case 36: 
            { return SHL;
            } 
            // fall through
          case 200: break;
          case 37: 
            { return UNEQ;
            } 
            // fall through
          case 201: break;
          case 38: 
            { return GTE;
            } 
            // fall through
          case 202: break;
          case 39: 
            { return SHR;
            } 
            // fall through
          case 203: break;
          case 40: 
            { return AS;
            } 
            // fall through
          case 204: break;
          case 41: 
            { return BY;
            } 
            // fall through
          case 205: break;
          case 42: 
            { return OF;
            } 
            // fall through
          case 206: break;
          case 43: 
            { return OR;
            } 
            // fall through
          case 207: break;
          case 44: 
            { return ON;
            } 
            // fall through
          case 208: break;
          case 45: 
            { return TO;
            } 
            // fall through
          case 209: break;
          case 46: 
            { return IF;
            } 
            // fall through
          case 210: break;
          case 47: 
            { return IN;
            } 
            // fall through
          case 211: break;
          case 48: 
            { return IS;
            } 
            // fall through
          case 212: break;
          case 49: 
            { return NO;
            } 
            // fall through
          case 213: break;
          case 50: 
            { return CONCAT;
            } 
            // fall through
          case 214: break;
          case 51: 
            { return END;
            } 
            // fall through
          case 215: break;
          case 52: 
            { return FOR;
            } 
            // fall through
          case 216: break;
          case 53: 
            { return AND;
            } 
            // fall through
          case 217: break;
          case 54: 
            { return ADD;
            } 
            // fall through
          case 218: break;
          case 55: 
            { return ALL;
            } 
            // fall through
          case 219: break;
          case 56: 
            { return ASC;
            } 
            // fall through
          case 220: break;
          case 57: 
            { return ROW;
            } 
            // fall through
          case 221: break;
          case 58: 
            { return NOT;
            } 
            // fall through
          case 222: break;
          case 59: 
            { return SET;
            } 
            // fall through
          case 223: break;
          case 60: 
            { return KEY;
            } 
            // fall through
          case 224: break;
          case 61: 
            { return EACH;
            } 
            // fall through
          case 225: break;
          case 62: 
            { return ELSE;
            } 
            // fall through
          case 226: break;
          case 63: 
            { return FAIL;
            } 
            // fall through
          case 227: break;
          case 64: 
            { return FROM;
            } 
            // fall through
          case 228: break;
          case 65: 
            { return FULL;
            } 
            // fall through
          case 229: break;
          case 66: 
            { return TEMP;
            } 
            // fall through
          case 230: break;
          case 67: 
            { return THEN;
            } 
            // fall through
          case 231: break;
          case 68: 
            { return CASE;
            } 
            // fall through
          case 232: break;
          case 69: 
            { return CAST;
            } 
            // fall through
          case 233: break;
          case 70: 
            { return INTO;
            } 
            // fall through
          case 234: break;
          case 71: 
            { return NULL;
            } 
            // fall through
          case 235: break;
          case 72: 
            { return DESC;
            } 
            // fall through
          case 236: break;
          case 73: 
            { return DROP;
            } 
            // fall through
          case 237: break;
          case 74: 
            { return LEFT;
            } 
            // fall through
          case 238: break;
          case 75: 
            { return LIKE;
            } 
            // fall through
          case 239: break;
          case 76: 
            { return GLOB;
            } 
            // fall through
          case 240: break;
          case 77: 
            { return WITH;
            } 
            // fall through
          case 241: break;
          case 78: 
            { return WHEN;
            } 
            // fall through
          case 242: break;
          case 79: 
            { return PLAN;
            } 
            // fall through
          case 243: break;
          case 80: 
            { return VIEW;
            } 
            // fall through
          case 244: break;
          case 81: 
            { return JOIN;
            } 
            // fall through
          case 245: break;
          case 82: 
            { return AFTER;
            } 
            // fall through
          case 246: break;
          case 83: 
            { return ABORT;
            } 
            // fall through
          case 247: break;
          case 84: 
            { return ALTER;
            } 
            // fall through
          case 248: break;
          case 85: 
            { return BEGIN;
            } 
            // fall through
          case 249: break;
          case 86: 
            { return ORDER;
            } 
            // fall through
          case 250: break;
          case 87: 
            { return OUTER;
            } 
            // fall through
          case 251: break;
          case 88: 
            { return RAISE;
            } 
            // fall through
          case 252: break;
          case 89: 
            { return RIGHT;
            } 
            // fall through
          case 253: break;
          case 90: 
            { return TABLE;
            } 
            // fall through
          case 254: break;
          case 91: 
            { return CROSS;
            } 
            // fall through
          case 255: break;
          case 92: 
            { return CHECK;
            } 
            // fall through
          case 256: break;
          case 93: 
            { return INNER;
            } 
            // fall through
          case 257: break;
          case 94: 
            { return INDEX;
            } 
            // fall through
          case 258: break;
          case 95: 
            { return LIMIT;
            } 
            // fall through
          case 259: break;
          case 96: 
            { return UNION;
            } 
            // fall through
          case 260: break;
          case 97: 
            { return USING;
            } 
            // fall through
          case 261: break;
          case 98: 
            { return MATCH;
            } 
            // fall through
          case 262: break;
          case 99: 
            { return GROUP;
            } 
            // fall through
          case 263: break;
          case 100: 
            { return WHERE;
            } 
            // fall through
          case 264: break;
          case 101: 
            { return QUERY;
            } 
            // fall through
          case 265: break;
          case 102: 
            { return EXCEPT;
            } 
            // fall through
          case 266: break;
          case 103: 
            { return EXISTS;
            } 
            // fall through
          case 267: break;
          case 104: 
            { return ESCAPE;
            } 
            // fall through
          case 268: break;
          case 105: 
            { return ATTACH;
            } 
            // fall through
          case 269: break;
          case 106: 
            { return ACTION;
            } 
            // fall through
          case 270: break;
          case 107: 
            { return BEFORE;
            } 
            // fall through
          case 271: break;
          case 108: 
            { return OFFSET;
            } 
            // fall through
          case 272: break;
          case 109: 
            { return RENAME;
            } 
            // fall through
          case 273: break;
          case 110: 
            { return REGEXP;
            } 
            // fall through
          case 274: break;
          case 111: 
            { return COLUMN;
            } 
            // fall through
          case 275: break;
          case 112: 
            { return COMMIT;
            } 
            // fall through
          case 276: break;
          case 113: 
            { return CREATE;
            } 
            // fall through
          case 277: break;
          case 114: 
            { return INSERT;
            } 
            // fall through
          case 278: break;
          case 115: 
            { return ISNULL;
            } 
            // fall through
          case 279: break;
          case 116: 
            { return IGNORE;
            } 
            // fall through
          case 280: break;
          case 117: 
            { return DETACH;
            } 
            // fall through
          case 281: break;
          case 118: 
            { return DELETE;
            } 
            // fall through
          case 282: break;
          case 119: 
            { return SELECT;
            } 
            // fall through
          case 283: break;
          case 120: 
            { return HAVING;
            } 
            // fall through
          case 284: break;
          case 121: 
            { return UNIQUE;
            } 
            // fall through
          case 285: break;
          case 122: 
            { return UPDATE;
            } 
            // fall through
          case 286: break;
          case 123: 
            { return PRAGMA;
            } 
            // fall through
          case 287: break;
          case 124: 
            { return VACUUM;
            } 
            // fall through
          case 288: break;
          case 125: 
            { return VALUES;
            } 
            // fall through
          case 289: break;
          case 126: 
            { return EXPLAIN;
            } 
            // fall through
          case 290: break;
          case 127: 
            { return FOREIGN;
            } 
            // fall through
          case 291: break;
          case 128: 
            { return ANALYZE;
            } 
            // fall through
          case 292: break;
          case 129: 
            { return BETWEEN;
            } 
            // fall through
          case 293: break;
          case 130: 
            { return REINDEX;
            } 
            // fall through
          case 294: break;
          case 131: 
            { return RELEASE;
            } 
            // fall through
          case 295: break;
          case 132: 
            { return REPLACE;
            } 
            // fall through
          case 296: break;
          case 133: 
            { return TRIGGER;
            } 
            // fall through
          case 297: break;
          case 134: 
            { return CASCADE;
            } 
            // fall through
          case 298: break;
          case 135: 
            { return COLLATE;
            } 
            // fall through
          case 299: break;
          case 136: 
            { return INDEXED;
            } 
            // fall through
          case 300: break;
          case 137: 
            { return INSTEAD;
            } 
            // fall through
          case 301: break;
          case 138: 
            { return NATURAL;
            } 
            // fall through
          case 302: break;
          case 139: 
            { return NOTNULL;
            } 
            // fall through
          case 303: break;
          case 140: 
            { return DEFAULT;
            } 
            // fall through
          case 304: break;
          case 141: 
            { return WITHOUT;
            } 
            // fall through
          case 305: break;
          case 142: 
            { return PRIMARY;
            } 
            // fall through
          case 306: break;
          case 143: 
            { return VIRTUAL;
            } 
            // fall through
          case 307: break;
          case 144: 
            { return RESTRICT;
            } 
            // fall through
          case 308: break;
          case 145: 
            { return ROLLBACK;
            } 
            // fall through
          case 309: break;
          case 146: 
            { return CONFLICT;
            } 
            // fall through
          case 310: break;
          case 147: 
            { return DEFERRED;
            } 
            // fall through
          case 311: break;
          case 148: 
            { return DATABASE;
            } 
            // fall through
          case 312: break;
          case 149: 
            { return DISTINCT;
            } 
            // fall through
          case 313: break;
          case 150: 
            { return EXCLUSIVE;
            } 
            // fall through
          case 314: break;
          case 151: 
            { return RECURSIVE;
            } 
            // fall through
          case 315: break;
          case 152: 
            { return TEMPORARY;
            } 
            // fall through
          case 316: break;
          case 153: 
            { return INTERSECT;
            } 
            // fall through
          case 317: break;
          case 154: 
            { return INITIALLY;
            } 
            // fall through
          case 318: break;
          case 155: 
            { return IMMEDIATE;
            } 
            // fall through
          case 319: break;
          case 156: 
            { return SAVEPOINT;
            } 
            // fall through
          case 320: break;
          case 157: 
            { return REFERENCES;
            } 
            // fall through
          case 321: break;
          case 158: 
            { return CONSTRAINT;
            } 
            // fall through
          case 322: break;
          case 159: 
            { return DEFERRABLE;
            } 
            // fall through
          case 323: break;
          case 160: 
            { return TRANSACTION;
            } 
            // fall through
          case 324: break;
          case 161: 
            { return CURRENT_TIME;
            } 
            // fall through
          case 325: break;
          case 162: 
            { return CURRENT_DATE;
            } 
            // fall through
          case 326: break;
          case 163: 
            { return AUTOINCREMENT;
            } 
            // fall through
          case 327: break;
          case 164: 
            { return CURRENT_TIMESTAMP;
            } 
            // fall through
          case 328: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
