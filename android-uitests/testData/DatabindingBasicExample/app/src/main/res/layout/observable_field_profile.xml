<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (C) 2018 The Android Open Source Project

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<!-- This layout contains some patterns that should be avoided and are fixed in
 the viewmodel layout. -->
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
    <data>

        <import type="com.example.android.databinding.basicsample.R"/>
        <import type="com.example.android.databinding.basicsample.util.ConverterUtil"/>
        <variable
            name="user"
            type="com.example.android.databinding.basicsample.data.ObservableFieldProfile" />
    </data>

    <android.support.constraint.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:id="@+id/name"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginEnd="128dp"
            android:layout_marginStart="16dp"
            android:layout_marginTop="8dp"
            android:text="@{user.name}"
            android:textAppearance="@style/TextAppearance.AppCompat.Large"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/name_label"/>

        <TextView
            android:id="@+id/lastname"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginEnd="128dp"
            android:layout_marginStart="16dp"
            android:layout_marginTop="8dp"
            android:text="@{user.lastName}"
            android:textAppearance="@style/TextAppearance.AppCompat.Large"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/lastname_label"/>

        <!-- Layout expressions can be *too* powerful. It's preferred to avoid this type of
        view logic in the layout. Instead, use Binding Adapters (see ViewModelActivity).

        Also, `app:srcCompat` is bound to setImageResource.
        -->
        <ImageView
            android:id="@+id/imageView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="24dp"
            android:layout_marginTop="24dp"
            android:contentDescription="@string/profile_avatar_cd"
            android:minHeight="48dp"
            android:minWidth="48dp"
            app:layout_constraintBottom_toTopOf="@+id/likes_label"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.0"
            app:layout_constraintVertical_chainStyle="packed"
            android:tint="@{user.likes &gt; 9 ? @color/star : @android:color/black}"
            app:srcCompat="@{user.likes &lt; 4 ? R.drawable.ic_person_black_96dp : R.drawable.ic_whatshot_black_96dp }"/>

        <!-- Conversions like Integer to String are expressions simple enough for the layout. An
        alternative would be to create a getter in the ViewModel for likes as a String. -->
        <TextView
            android:id="@+id/likes"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{Integer.toString(user.likes)}"
            android:textAppearance="@style/TextAppearance.AppCompat.Title"
            app:layout_constraintBottom_toTopOf="@+id/like_button"
            app:layout_constraintEnd_toEndOf="@+id/likes_label"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="@+id/likes_label"
            app:layout_constraintTop_toBottomOf="@+id/likes_label"/>

        <!-- Note that the `android:onClick` attribute is going to call the onLike() method in the
         activity, polluting it with logic. See the `ViewModelActivity` for a better alternative.
         -->
        <Button
            android:id="@+id/like_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:layout_marginEnd="16dp"
            android:layout_marginTop="16dp"
            android:onClick="onLike"
            android:text="@string/like"
            app:layout_constraintBottom_toTopOf="@+id/progressBar"
            app:layout_constraintStart_toStartOf="@+id/imageView"
            app:layout_constraintEnd_toEndOf="@+id/imageView"
            app:layout_constraintTop_toBottomOf="@+id/likes"/>

        <TextView
            android:id="@+id/name_label"
            android:layout_width="38dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:layout_marginTop="8dp"
            android:text="@string/name_label"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"/>

        <TextView
            android:id="@+id/lastname_label"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:layout_marginTop="8dp"
            android:text="@string/last_name_label"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/name"/>

        <TextView
            android:id="@+id/likes_label"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            android:layout_marginStart="8dp"
            android:text="@string/likes"
            android:textAlignment="center"
            app:layout_constraintBottom_toTopOf="@+id/likes"
            app:layout_constraintEnd_toEndOf="@+id/imageView"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="@+id/imageView"
            app:layout_constraintTop_toBottomOf="@+id/imageView"/>

        <!-- android:progressTint is only available in API 21+ so we deal with that in the
        Binding Adapter.

        The android:visibility attribute is used to showcase BindingConversions,
        see the README for a better alternative with a BindingAdapter.-->
        <ProgressBar
            android:id="@+id/progressBar"
            style="?android:attr/progressBarStyleHorizontal"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:max="@{100}"
            android:visibility="@{ConverterUtil.isZero(user.likes)}"
            app:progressScaled="@{user.likes}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="@+id/like_button"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="@+id/like_button"
            app:layout_constraintTop_toBottomOf="@+id/like_button"
            tools:progressBackgroundTint="@android:color/darker_gray"/>
    </android.support.constraint.ConstraintLayout>
</layout>