<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.content.pm.ActivityInfo colorMode">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.COLOR_MODE_DEFAULT, android.content.pm.ActivityInfo.COLOR_MODE_WIDE_COLOR_GAMUT, android.content.pm.ActivityInfo.COLOR_MODE_HDR}" />
    </annotation>
  </item>
  <item name="android.content.pm.ActivityInfo screenOrientation">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_USER, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_BEHIND, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_SENSOR, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_NOSENSOR, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_SENSOR_PORTRAIT, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_USER_LANDSCAPE, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_USER_PORTRAIT, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_FULL_USER, android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LOCKED}" />
    </annotation>
  </item>
  <item name="android.content.pm.ActivityInfo softInputMode">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_UNCHANGED, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_UNSPECIFIED, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING, android.view.WindowManager.LayoutParams.SOFT_INPUT_IS_FORWARD_NAVIGATION}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.ApplicationInfo category">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ApplicationInfo.CATEGORY_UNDEFINED, android.content.pm.ApplicationInfo.CATEGORY_GAME, android.content.pm.ApplicationInfo.CATEGORY_AUDIO, android.content.pm.ApplicationInfo.CATEGORY_VIDEO, android.content.pm.ApplicationInfo.CATEGORY_IMAGE, android.content.pm.ApplicationInfo.CATEGORY_SOCIAL, android.content.pm.ApplicationInfo.CATEGORY_NEWS, android.content.pm.ApplicationInfo.CATEGORY_MAPS, android.content.pm.ApplicationInfo.CATEGORY_PRODUCTIVITY}" />
    </annotation>
  </item>
  <item name="android.content.pm.ApplicationInfo java.lang.CharSequence getCategoryTitle(android.content.Context, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ApplicationInfo.CATEGORY_UNDEFINED, android.content.pm.ApplicationInfo.CATEGORY_GAME, android.content.pm.ApplicationInfo.CATEGORY_AUDIO, android.content.pm.ApplicationInfo.CATEGORY_VIDEO, android.content.pm.ApplicationInfo.CATEGORY_IMAGE, android.content.pm.ApplicationInfo.CATEGORY_SOCIAL, android.content.pm.ApplicationInfo.CATEGORY_NEWS, android.content.pm.ApplicationInfo.CATEGORY_MAPS, android.content.pm.ApplicationInfo.CATEGORY_PRODUCTIVITY}" />
    </annotation>
  </item>
  <item name="android.content.pm.ChangedPackages ChangedPackages(int, java.util.List&lt;java.lang.String&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ChangedPackages java.util.List&lt;java.lang.String&gt; getPackageNames()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps android.graphics.drawable.Drawable getProfileSwitchingIconDrawable(android.os.UserHandle)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps android.graphics.drawable.Drawable getProfileSwitchingIconDrawable(android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps java.lang.CharSequence getProfileSwitchingLabel(android.os.UserHandle)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps java.lang.CharSequence getProfileSwitchingLabel(android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps java.util.List&lt;android.os.UserHandle&gt; getTargetUserProfiles()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps void startMainActivity(android.content.ComponentName, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.CrossProfileApps void startMainActivity(android.content.ComponentName, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps">
    <annotation name="android.support.annotation.SystemService">
      <val name="value" val="android.content.Context.LAUNCHER_APPS_SERVICE" />
    </annotation>
  </item>
  <item name="android.content.pm.LauncherApps android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.LauncherApps android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, android.os.UserHandle) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String, android.os.UserHandle)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps java.util.List&lt;android.content.pm.LauncherActivityInfo&gt; getShortcutConfigActivityList(java.lang.String, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps java.util.List&lt;android.content.pm.LauncherActivityInfo&gt; getShortcutConfigActivityList(java.lang.String, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps java.util.List&lt;android.content.pm.ShortcutInfo&gt; getShortcuts(android.content.pm.LauncherApps.ShortcutQuery, android.os.UserHandle)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps java.util.List&lt;android.content.pm.ShortcutInfo&gt; getShortcuts(android.content.pm.LauncherApps.ShortcutQuery, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps java.util.List&lt;android.content.pm.ShortcutInfo&gt; getShortcuts(android.content.pm.LauncherApps.ShortcutQuery, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void pinShortcuts(java.lang.String, java.util.List&lt;java.lang.String&gt;, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void pinShortcuts(java.lang.String, java.util.List&lt;java.lang.String&gt;, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void pinShortcuts(java.lang.String, java.util.List&lt;java.lang.String&gt;, android.os.UserHandle) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle) 2">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) 2">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) 3">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) 4">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps.Callback void onPackagesSuspended(java.lang.String[], android.os.UserHandle, android.os.Bundle) 2">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.Callback void onShortcutsChanged(java.lang.String, java.util.List&lt;android.content.pm.ShortcutInfo&gt;, android.os.UserHandle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps.Callback void onShortcutsChanged(java.lang.String, java.util.List&lt;android.content.pm.ShortcutInfo&gt;, android.os.UserHandle) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps.Callback void onShortcutsChanged(java.lang.String, java.util.List&lt;android.content.pm.ShortcutInfo&gt;, android.os.UserHandle) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.LauncherApps.PinItemRequest android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo(android.content.Context)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.PinItemRequest android.content.pm.ShortcutInfo getShortcutInfo()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.PinItemRequest android.os.Bundle getExtras()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.PinItemRequest boolean accept(android.os.Bundle) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.PinItemRequest int getRequestType()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_SHORTCUT, android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_APPWIDGET}" />
    </annotation>
  </item>
  <item name="android.content.pm.LauncherApps.ShortcutQuery android.content.pm.LauncherApps.ShortcutQuery setActivity(android.content.ComponentName) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.ShortcutQuery android.content.pm.LauncherApps.ShortcutQuery setPackage(java.lang.String) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.LauncherApps.ShortcutQuery android.content.pm.LauncherApps.ShortcutQuery setQueryFlags(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_DYNAMIC, android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_PINNED, android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_MANIFEST, android.content.pm.LauncherApps.ShortcutQuery.FLAG_GET_KEY_FIELDS_ONLY, android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_MANIFEST}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.LauncherApps.ShortcutQuery android.content.pm.LauncherApps.ShortcutQuery setShortcutIds(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller android.content.pm.PackageInstaller.Session openSession(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller int createSession(android.content.pm.PackageInstaller.SessionParams) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller java.util.List&lt;android.content.pm.PackageInstaller.SessionInfo&gt; getAllSessions()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller java.util.List&lt;android.content.pm.PackageInstaller.SessionInfo&gt; getMySessions()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback, android.os.Handler) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback, android.os.Handler) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(android.content.pm.VersionedPackage, android.content.IntentSender)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="anyOf" val="{&quot;android.permission.DELETE_PACKAGES&quot;, &quot;android.permission.REQUEST_DELETE_PACKAGES&quot;}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(android.content.pm.VersionedPackage, android.content.IntentSender) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(android.content.pm.VersionedPackage, android.content.IntentSender) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(java.lang.String, android.content.IntentSender)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="anyOf" val="{&quot;android.permission.DELETE_PACKAGES&quot;, &quot;android.permission.REQUEST_DELETE_PACKAGES&quot;}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(java.lang.String, android.content.IntentSender) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void uninstall(java.lang.String, android.content.IntentSender) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller void updateSessionAppIcon(int, android.graphics.Bitmap) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller void updateSessionAppLabel(int, java.lang.CharSequence) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session java.io.InputStream openRead(java.lang.String)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session java.io.InputStream openRead(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session java.io.OutputStream openWrite(java.lang.String, long, long)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session java.io.OutputStream openWrite(java.lang.String, long, long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session java.lang.String[] getNames()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session void commit(android.content.IntentSender) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session void fsync(java.io.OutputStream) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session void removeSplit(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.Session void transfer(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo android.content.Intent createDetailsIntent()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo android.graphics.Bitmap getAppIcon()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo android.net.Uri getOriginatingUri()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo android.net.Uri getReferrerUri()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo int getInstallReason()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.INSTALL_REASON_UNKNOWN, android.content.pm.PackageManager.INSTALL_REASON_POLICY, android.content.pm.PackageManager.INSTALL_REASON_DEVICE_RESTORE, android.content.pm.PackageManager.INSTALL_REASON_DEVICE_SETUP, android.content.pm.PackageManager.INSTALL_REASON_USER}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo java.lang.CharSequence getAppLabel()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo java.lang.String getAppPackageName()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionInfo java.lang.String getInstallerPackageName()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setAppIcon(android.graphics.Bitmap) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setAppLabel(java.lang.CharSequence) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setAppPackageName(java.lang.String) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setInstallReason(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.INSTALL_REASON_UNKNOWN, android.content.pm.PackageManager.INSTALL_REASON_POLICY, android.content.pm.PackageManager.INSTALL_REASON_DEVICE_RESTORE, android.content.pm.PackageManager.INSTALL_REASON_DEVICE_SETUP, android.content.pm.PackageManager.INSTALL_REASON_USER}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setOriginatingUri(android.net.Uri) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageInstaller.SessionParams void setReferrerUri(android.net.Uri) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageItemInfo java.lang.CharSequence loadLabel(android.content.pm.PackageManager)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageItemInfo java.lang.CharSequence loadLabel(android.content.pm.PackageManager) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager android.content.Intent getLaunchIntentForPackage(java.lang.String)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager android.content.Intent getLaunchIntentForPackage(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ChangedPackages getChangedPackages(int)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ChangedPackages getChangedPackages(int) 0">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="0" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PackageInstaller getPackageInstaller()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ResolveInfo resolveService(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo) 1">
    <annotation name="android.support.annotation.XmlRes" />
  </item>
  <item name="android.content.pm.PackageManager android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo) 1">
    <annotation name="android.support.annotation.DrawableRes" />
  </item>
  <item name="android.content.pm.PackageManager android.os.Bundle getSuspendedPackageAppExtras()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager boolean hasSigningCertificate(int, byte[], int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.CERT_INPUT_RAW_X509, android.content.pm.PackageManager.CERT_INPUT_SHA256}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager boolean hasSigningCertificate(java.lang.String, byte[], int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.CERT_INPUT_RAW_X509, android.content.pm.PackageManager.CERT_INPUT_SHA256}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager boolean isPermissionRevokedByPolicy(java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.CheckResult" />
  </item>
  <item name="android.content.pm.PackageManager boolean isPermissionRevokedByPolicy(java.lang.String, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager boolean isPermissionRevokedByPolicy(java.lang.String, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager byte[] getInstantAppCookie()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager int checkPermission(java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.CheckResult" />
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.PERMISSION_GRANTED, android.content.pm.PackageManager.PERMISSION_DENIED}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int checkSignatures(int, int)">
    <annotation name="android.support.annotation.CheckResult" />
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.SIGNATURE_MATCH, android.content.pm.PackageManager.SIGNATURE_NEITHER_SIGNED, android.content.pm.PackageManager.SIGNATURE_FIRST_NOT_SIGNED, android.content.pm.PackageManager.SIGNATURE_SECOND_NOT_SIGNED, android.content.pm.PackageManager.SIGNATURE_NO_MATCH, android.content.pm.PackageManager.SIGNATURE_UNKNOWN_PACKAGE}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int checkSignatures(java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.CheckResult" />
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.SIGNATURE_MATCH, android.content.pm.PackageManager.SIGNATURE_NEITHER_SIGNED, android.content.pm.PackageManager.SIGNATURE_FIRST_NOT_SIGNED, android.content.pm.PackageManager.SIGNATURE_SECOND_NOT_SIGNED, android.content.pm.PackageManager.SIGNATURE_NO_MATCH, android.content.pm.PackageManager.SIGNATURE_UNKNOWN_PACKAGE}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int getApplicationEnabledSetting(java.lang.String)">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int getComponentEnabledSetting(android.content.ComponentName)">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int getPackageUid(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager int getPreferredActivities(java.util.List&lt;android.content.IntentFilter&gt;, java.util.List&lt;android.content.ComponentName&gt;, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager int getPreferredActivities(java.util.List&lt;android.content.IntentFilter&gt;, java.util.List&lt;android.content.ComponentName&gt;, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager int[] getPackageGids(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager int[] getPackageGids(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo) 1">
    <annotation name="android.support.annotation.StringRes" />
  </item>
  <item name="android.content.pm.PackageManager java.lang.String getNameForUid(int)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager java.lang.String[] getPackagesForUid(int)">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ApplicationInfo&gt; getInstalledApplications(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.InstrumentationInfo&gt; queryInstrumentation(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.PackageInfo&gt; getInstalledPackages(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.PackageInfo&gt; getPackagesHoldingPermissions(java.lang.String[], int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.PackageInfo&gt; getPreferredPackages(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_ACTIVITIES, android.content.pm.PackageManager.GET_CONFIGURATIONS, android.content.pm.PackageManager.GET_GIDS, android.content.pm.PackageManager.GET_INSTRUMENTATION, android.content.pm.PackageManager.GET_INTENT_FILTERS, android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_PERMISSIONS, android.content.pm.PackageManager.GET_PROVIDERS, android.content.pm.PackageManager.GET_RECEIVERS, android.content.pm.PackageManager.GET_SERVICES, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.GET_SIGNATURES, android.content.pm.PackageManager.GET_SIGNING_CERTIFICATES, android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.PermissionGroupInfo&gt; getAllPermissionGroups(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.PermissionInfo&gt; queryPermissionsByGroup(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ProviderInfo&gt; queryContentProviders(java.lang.String, int, int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryBroadcastReceivers(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentActivities(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int) 3">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentContentProviders(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.ResolveInfo&gt; queryIntentServices(android.content.Intent, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.GET_META_DATA, android.content.pm.PackageManager.GET_RESOLVED_FILTER, android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES, android.content.pm.PackageManager.MATCH_ALL, android.content.pm.PackageManager.MATCH_DISABLED_COMPONENTS, android.content.pm.PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.MATCH_DEFAULT_ONLY, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_AWARE, android.content.pm.PackageManager.MATCH_DIRECT_BOOT_UNAWARE, android.content.pm.PackageManager.MATCH_SYSTEM_ONLY, android.content.pm.PackageManager.MATCH_UNINSTALLED_PACKAGES, android.content.pm.PackageManager.GET_DISABLED_COMPONENTS, android.content.pm.PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS, android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.SharedLibraryInfo&gt; getSharedLibraries(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager java.util.List&lt;android.content.pm.SharedLibraryInfo&gt; getSharedLibraries(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void setApplicationCategoryHint(java.lang.String, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.PackageManager void setApplicationCategoryHint(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ApplicationInfo.CATEGORY_UNDEFINED, android.content.pm.ApplicationInfo.CATEGORY_GAME, android.content.pm.ApplicationInfo.CATEGORY_AUDIO, android.content.pm.ApplicationInfo.CATEGORY_VIDEO, android.content.pm.ApplicationInfo.CATEGORY_IMAGE, android.content.pm.ApplicationInfo.CATEGORY_SOCIAL, android.content.pm.ApplicationInfo.CATEGORY_NEWS, android.content.pm.ApplicationInfo.CATEGORY_MAPS, android.content.pm.ApplicationInfo.CATEGORY_PRODUCTIVITY}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void setApplicationEnabledSetting(java.lang.String, int, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void setApplicationEnabledSetting(java.lang.String, int, int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.DONT_KILL_APP}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void setComponentEnabledSetting(android.content.ComponentName, int, int) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED}" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void setComponentEnabledSetting(android.content.ComponentName, int, int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PackageManager.DONT_KILL_APP}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.PackageManager void updateInstantAppCookie(byte[]) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.PermissionInfo int getProtection()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PermissionInfo.PROTECTION_NORMAL, android.content.pm.PermissionInfo.PROTECTION_DANGEROUS, android.content.pm.PermissionInfo.PROTECTION_SIGNATURE, android.content.pm.PermissionInfo.PROTECTION_SIGNATURE_OR_SYSTEM}" />
      <val name="flag" val="false" />
    </annotation>
  </item>
  <item name="android.content.pm.PermissionInfo int getProtectionFlags()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.PermissionInfo.PROTECTION_FLAG_PRIVILEGED, android.content.pm.PermissionInfo.PROTECTION_FLAG_SYSTEM, android.content.pm.PermissionInfo.PROTECTION_FLAG_DEVELOPMENT, android.content.pm.PermissionInfo.PROTECTION_FLAG_APPOP, android.content.pm.PermissionInfo.PROTECTION_FLAG_PRE23, android.content.pm.PermissionInfo.PROTECTION_FLAG_INSTALLER, android.content.pm.PermissionInfo.PROTECTION_FLAG_VERIFIER, android.content.pm.PermissionInfo.PROTECTION_FLAG_PREINSTALLED, android.content.pm.PermissionInfo.PROTECTION_FLAG_SETUP, android.content.pm.PermissionInfo.PROTECTION_FLAG_INSTANT, android.content.pm.PermissionInfo.PROTECTION_FLAG_RUNTIME_ONLY}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.SharedLibraryInfo android.content.pm.VersionedPackage getDeclaringPackage()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.SharedLibraryInfo int getType()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.SharedLibraryInfo.TYPE_BUILTIN, android.content.pm.SharedLibraryInfo.TYPE_DYNAMIC, android.content.pm.SharedLibraryInfo.TYPE_STATIC}" />
      <val name="flag" val="true" />
    </annotation>
  </item>
  <item name="android.content.pm.SharedLibraryInfo int getVersion()">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
  <item name="android.content.pm.SharedLibraryInfo java.util.List&lt;android.content.pm.VersionedPackage&gt; getDependentPackages()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.SharedLibraryInfo long getLongVersion()">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
  <item name="android.content.pm.ShortcutInfo android.content.ComponentName getActivity()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo android.content.Intent getIntent()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo android.content.Intent[] getIntents()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo android.os.PersistableBundle getExtras()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo int getDisabledReason()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.content.pm.ShortcutInfo.DISABLED_REASON_NOT_DISABLED, android.content.pm.ShortcutInfo.DISABLED_REASON_BY_APP, android.content.pm.ShortcutInfo.DISABLED_REASON_APP_CHANGED, android.content.pm.ShortcutInfo.DISABLED_REASON_UNKNOWN, android.content.pm.ShortcutInfo.DISABLED_REASON_VERSION_LOWER, android.content.pm.ShortcutInfo.DISABLED_REASON_BACKUP_NOT_SUPPORTED, android.content.pm.ShortcutInfo.DISABLED_REASON_SIGNATURE_MISMATCH, android.content.pm.ShortcutInfo.DISABLED_REASON_OTHER_RESTORE_ISSUE}" />
    </annotation>
  </item>
  <item name="android.content.pm.ShortcutInfo java.lang.CharSequence getDisabledMessage()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo java.lang.CharSequence getLongLabel()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo java.lang.CharSequence getShortLabel()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo java.lang.String getId()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo java.lang.String getPackage()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo java.util.Set&lt;java.lang.String&gt; getCategories()">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo build()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set&lt;java.lang.String&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setRank(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutInfo.Builder android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager">
    <annotation name="android.support.annotation.SystemService">
      <val name="value" val="android.content.Context.SHORTCUT_SERVICE" />
    </annotation>
  </item>
  <item name="android.content.pm.ShortcutManager android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager boolean addDynamicShortcuts(java.util.List&lt;android.content.pm.ShortcutInfo&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager boolean requestPinShortcut(android.content.pm.ShortcutInfo, android.content.IntentSender) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager boolean requestPinShortcut(android.content.pm.ShortcutInfo, android.content.IntentSender) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.content.pm.ShortcutManager boolean setDynamicShortcuts(java.util.List&lt;android.content.pm.ShortcutInfo&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager boolean updateShortcuts(java.util.List&lt;android.content.pm.ShortcutInfo&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager java.util.List&lt;android.content.pm.ShortcutInfo&gt; getDynamicShortcuts()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager java.util.List&lt;android.content.pm.ShortcutInfo&gt; getManifestShortcuts()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager java.util.List&lt;android.content.pm.ShortcutInfo&gt; getPinnedShortcuts()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager void disableShortcuts(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager void disableShortcuts(java.util.List&lt;java.lang.String&gt;, java.lang.CharSequence) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager void enableShortcuts(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.ShortcutManager void removeDynamicShortcuts(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.VersionedPackage VersionedPackage(java.lang.String, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.VersionedPackage VersionedPackage(java.lang.String, int) 1">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
  <item name="android.content.pm.VersionedPackage VersionedPackage(java.lang.String, long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.VersionedPackage VersionedPackage(java.lang.String, long) 1">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
  <item name="android.content.pm.VersionedPackage int getVersionCode()">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
  <item name="android.content.pm.VersionedPackage java.lang.String getPackageName()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.content.pm.VersionedPackage long getLongVersionCode()">
    <annotation name="android.support.annotation.IntRange">
      <val name="from" val="-1" />
    </annotation>
  </item>
</root>

